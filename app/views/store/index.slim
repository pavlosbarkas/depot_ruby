- if notice
  aside#notice = notice

h1 = t('.title_html')

ul.catalog
  - cache @products do
    - @products.each do |product|
      - if product.locale == I18n.locale.to_s
        - cache product do
          li
            = image_tag(product.image_url)
            h2 = product.title
            p = sanitize(product.description)
            .price
              = number_to_currency(product.price)
              = button_to t('.add_html'),
                      line_items_path(product_id: product, locale: I18n.locale),
                      remote: true

/ the slim code above does exactly the same thing as the erb html below
/<% if notice %>
  <aside id="notice"><%= notice %></aside>
/<% end %>

/<h1><%= t('.title_html') %></h1>

/<ul class="catalog">
  <% cache @products do %>
    <% @products.each do |product| %>
      <% cache product do %>
        <li id='<%= product.id%>'>
          <%# make image clickable and add to cart using the image %>
          <%= link_to line_items_path(product_id: product), method: :post do %>
            <%= image_tag(product.image_url) %>
          <% end %>
          <h2><%= product.title %></h2>
          <p>
            <%= sanitize(product.description) %> <%#sanitize helps to safely add html styling%>
          </p>
          <div class="price">
            <%= number_to_currency(product.price) %> <%# , :locale => :fr for euro %>
            <%# Add to Cart button. Creates a new line_item by sending the product id %>
            <%= button_to t('.add_html'), line_items_path(product_id: product, locale: I18n.locale) , remote: true %>
            <%# without remote true the button creates a link with the create action. with remote true it sends an ajax request instead %>
          </div>
        </li>
      <% end %>
    <% end %>
  <% end %>
/</ul>